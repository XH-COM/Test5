apply plugin: 'com.android.application'

android {

    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION

    //useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId project.ANDROID_BUILD_APP_PKG
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode Integer.parseInt(project.ANDROID_BUILD_VERSION_CODE)
        versionName project.ANDROID_BUILD_VERSION_NAME
	    multiDexEnabled true
        externalNativeBuild { // 新加的 不知道有没有用 libsec.so
            cmake {
                cppFlags ""
                abiFilters "armeabi-v7a"  //添加这个，这个是编译c源代码成为so库的时候指定的类型。注意：是编译成哪些类型，打包的时候是另外一回事，所以需要使用ndk指定打包abi类型。
            }
        }
        ndk{//添加这个 这个是打包时的指定abi类型
            abiFilters "armeabi-v7a"
        }

    }

    lintOptions {
        abortOnError false
		checkReleaseBuilds false
    }

    aaptOptions {
        cruncherEnabled false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets{
        main{
            jniLibs.srcDirs = ['libs']
        }
    }

}

repositories{
    flatDir{
        dirs 'libs'
    }
}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // 包含所有 JAR 文件，但排除 apiEngine v3.0.0.jar
    implementation fileTree(dir: 'libs', include: ['*.jar'], exclude: ['apiEngine v3.0.0.jar'])

//    // 明确添加 apiEngine v3.0.0.jar（不使用 jetified 版本）
//    implementation files('libs/apiEngine v3.0.0.jar')

//    implementation 'com.android.support:support-v4:26.0.0'
//    implementation 'com.android.support:multidex:1.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    //5个模块
    implementation project(':moduleDemo')
    implementation project(':moduleScrollPicture')
    implementation project(':moduleSyncInterface')
    implementation project(':moduleRefresh')
    implementation project(':moduleAppdelegate')
}
